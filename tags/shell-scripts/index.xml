<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Shell-Scripts on Paul Elvis Otto</title>
    <link>http://localhost:1313/tags/shell-scripts/</link>
    <description>Recent content in Shell-Scripts on Paul Elvis Otto</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Jan 2023 10:00:00 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/shell-scripts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The best way to use shell-scripts</title>
      <link>http://localhost:1313/posts/my-first-post/</link>
      <pubDate>Sun, 01 Jan 2023 10:00:00 -0500</pubDate>
      <guid>http://localhost:1313/posts/my-first-post/</guid>
      <description>&lt;h1 id=&#34;tldr&#34;&gt;TLDR&lt;/h1&gt;
&lt;p&gt;Shell scripts transform data science workflows. When researchers face processing thousands of files with looming deadlines, these humble text files automate entire research pipelines. They excel at preprocessing data, connecting different tools, and creating reproducible analyses. Combined with Makefiles, they&amp;rsquo;ve revolutionized computational social science research. This post explores practical examples that might save your next project.&lt;/p&gt;
&lt;h1 id=&#34;using-shell-scripts-for-everything&#34;&gt;Using shell scripts for everything&lt;/h1&gt;
&lt;p&gt;It&amp;rsquo;s a familiar scene in research labs worldwide: the clock reads 2 AM, and a bleary-eyed researcher stares at a computer screen, mentally calculating how long it will take to process hundreds of text files for an upcoming conference deadline. This scenario plays out daily, but it doesn&amp;rsquo;t have to.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
